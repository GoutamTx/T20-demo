name: E2E - Deploy and Test Exploit Detection

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  end-to-end-test:
    name: Run End-to-End Test
    runs-on: ubuntu-latest
    steps:
      # 1. Check out the repository's code
      - name: Checkout Code
        uses: actions/checkout@v4

      # 2. Set up a temporary Kubernetes cluster using Kind
      - name: Create Kind Cluster
        uses: helm/kind-action@v1.10.0

      # 3. Deploy the entire Loki and Promtail monitoring stack
      - name: Deploy Loki Stack
        run: kubectl apply -f loki-stack/

      # 4. Deploy the Tracee eBPF monitoring agent
      - name: Deploy Tracee
        run: kubectl apply -f tracee/

      # 5. Wait for all deployments to be ready before starting the test
      - name: Wait for Loki StatefulSet to be ready
        run: |
          # This waits for the StatefulSet controller to report that 1 replica is ready.
          kubectl wait --for=jsonpath='{.status.readyReplicas}'=1 statefulset/loki -n monitoring --timeout=180s

      - name: Wait for Promtail DaemonSet to be ready
        run: |
          # This waits for the DaemonSet controller to report that its pods are ready.
          kubectl wait --for=jsonpath='{.status.numberReady}'=1 daemonset/promtail -n monitoring --timeout=180s

      - name: Wait for Tracee DaemonSet to be ready
        run: |
          # This waits for the DaemonSet controller to report that its pods are ready.
          kubectl wait --for=jsonpath='{.status.numberReady}'=1 daemonset/tracee -n kube-system --timeout=180s
        
      # 6. Perform the ptrace exploit simulation
      - name: Perform Ptrace Attack Simulation
        run: |
          echo "üöÄ Starting ptrace attack simulation..."
          kubectl run attacker-ptrace --image=alpine --restart=Never --rm \
            -- /bin/sh -c "apk add --no-cache strace && strace -c -p 1"

      # 7. Verify that Tracee detected the exploit
      - name: Verify Detection Logs
        run: |
          echo "‚è≥ Waiting for logs to propagate..."
          sleep 15

          echo "üîç Searching for detection event in Tracee logs..."
          TRACE_POD=$(kubectl get pods -n kube-system -l app=tracee -o jsonpath='{.items[0].metadata.name}')
          kubectl logs $TRACE_POD -n kube-system | grep '"eventName":"ptrace"'
          
          echo "‚úÖ Success! Ptrace event was detected by Tracee."
